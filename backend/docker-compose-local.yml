version: "3.8"
services:
  postgres:
    image: postgres:18-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: Asia/Bangkok
    logging:
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - .env
    ports:
      - "5433:5432"
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          '${POSTGRES_USER}',
          '-d',
          '${POSTGRES_DB}'
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
      MINIO_SERVER_URL: http://localhost:9000
      TZ: Asia/Bangkok
    logging:
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - .env
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio-data:/data

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb --ignore-existing local/${MINIO_BUCKET_NAME:-nktc-uploads};
      mc anonymous set download local/${MINIO_BUCKET_NAME:-nktc-uploads};
      mc admin user svcacct add --access-key ${MINIO_ACCESS_KEY} --secret-key ${MINIO_SECRET_KEY} local ${MINIO_ROOT_USER} || true;
      exit 0;
      "

volumes:
  postgres-data: {}
  minio-data: {}
