###################
# BUILD FOR PRODUCTION
###################
FROM node:22-alpine3.18 as build

RUN apk add --no-cache curl bash openssl \
  && curl -sfL https://gobinaries.com/tj/node-prune | bash -s -- -b /usr/local/bin

WORKDIR /usr/src/app

COPY package.json yarn.lock ./

RUN yarn --production

COPY . .

# Generate Prisma Client
RUN yarn run prisma:generate \
  && yarn run prisma:generate-mongo \
  && yarn run build

ENV NODE_ENV production

RUN yarn cache clean --force \
  && /usr/local/bin/node-prune \
  && rm -rf \
  node_modules/rxjs/src/ \
  node_modules/rxjs/bundles/ \
  node_modules/rxjs/_esm5/ \
  node_modules/rxjs/_esm2015/ \
  node_modules/swagger-ui-dist/*.map \
  node_modules/@prisma/engines/ \
  node_modules/@prisma/engines-version \
  node_modules/prisma \
  /root/.cache/ \
  /root/.npm/ \
  && find /usr/src/app/node_modules/ -type f -iname "*.md" -exec rm {} \;

USER node

###################
# PRODUCTION
###################
FROM node:22-alpine3.18 AS deploy

ENV TZ Asia/Bangkok
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

WORKDIR /usr/src/app

COPY --chown=node:node --from=build /usr/src/app/package*.json /usr/src/app/
COPY --chown=node:node --from=build /usr/src/app/yarn.lock /usr/src/app/
COPY --chown=node:node --from=build /usr/src/app/dist/ /usr/src/app/dist/
COPY --chown=node:node --from=build /usr/src/app/node_modules/ /usr/src/app/node_modules/

CMD [ "node", "dist/main.js" ]
