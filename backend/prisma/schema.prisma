generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id            String    @id @default(cuid())
  userId        String?   @unique
  avatar        String? // avatar path
  title         String?
  firstName     String?
  lastName      String?
  titleEn       String?
  firstNameEn   String?
  lastNameEn    String?
  idCard        String?
  birthDate     DateTime?
  bloodType     String?
  fatherName    String?
  fatherPhone   String?
  motherName    String?
  motherPhone   String?
  parentName    String?
  parentPhone   String?
  addressLine1  String?
  subdistrict   String?
  district      String?
  province      String?
  postcode      String?
  country       String?
  phone         String?
  refresh_token String?
  access_token  String?
  expires_at    Int?
  token_type    String?
  scope         String?
  id_token      String?
  session_state String?
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  updatedBy     String?
  createdBy     String?

  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  email     String?
  role      Role      @default(User)
  account   Account?
  sessions  Session[]
  student   Student?
  teacher   Teacher?
  status    String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  updatedBy String?
  createdBy String?

  @@map("user")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Student {
  id             String      @id @default(cuid())
  userId         String?     @unique
  studentId      String?     @unique
  classroomId    String?
  departmentId   String?
  isGraduation   Boolean?
  graduationYear Int?
  graduationDate DateTime?
  studentStatus  String? // กำลังศึกษา, ออกก่อนกำหนด, จบการศึกษา,
  stutus         String?
  levelId        String?
  level          Level?      @relation(fields: [levelId], references: [id])
  user           User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  classroom      ClassRoom?  @relation(fields: [classroomId], references: [id])
  department     Department? @relation(fields: [departmentId], references: [id])
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  updatedBy      String?
  createdBy      String?

  @@map("student")
}

model Teacher {
  id               String      @id @default(cuid())
  teacherId        String?     @unique
  userId           String?     @unique
  classroomId      ClassRoom[] // ครูประจำชั้น
  jobTitle         String? // ตำแหน่ง
  academicStanding String? // วิทยฐานะ
  departmentId     String? // สาขาวิชา
  rfId             String?
  status           String?
  user             User?       @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  updatedBy String?
  createdBy String?

  @@map("teacher")
}

// กลุ่มเรียน
// ปวช.1/1
// ปวช.1/2
// ปวช.1/3
// ปวช.1/4
// ปวช.1/5
// ปวช.1/6
// ปวช.1/9
// ปวช.2/1
// ปวช.2/2
// ปวช.2/3
// ปวช.2/4
// ปวช.2/5
// ปวช.2/6
// ปวช.2/7
// ปวช.2/8
// ปวช.2/9
// ปวช.3/1
// ปวช.3/2
// ปวช.3/3
// ปวช.3/4
// ปวช.3/5
// ปวช.3/6
// ปวช.3/9
// ปวส.1/1
// ปวส.1/2
// ปวส.1/3
// ปวส.1/4
// ปวส.1/5
// ปวส.1/6
// ปวส.2/1
// ปวส.2/2
// ปวส.2/3
// ปวส.2/4
// ปวส.2/5
// ปวส.2/6
// ปวส.2/7
model ClassRoom {
  id          String    @id @default(cuid())
  classroomId String?   @unique
  name        String?
  description String?
  teacherId   Teacher[]
  student     Student[]
  course      Course[]
  levelId     String?
  level       Level?    @relation(fields: [levelId], references: [id])
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  updatedBy   String?
  createdBy   String?

  @@map("class")
}

// แผนกวิชา
// ปวส.
// เทคนิคยานยนต์
// เทคนิคเครื่องกลอุตสาหกรรม
// เทคนิคยานยนต์ (ทวิภาคี)
// เทคนิคยานยนต์ (ม.6)
// เทคนิคเครื่องกลอุตสาหกรรม (ม.6)
// เครื่องมือกล
// เครื่องมือกล (ทวิภาคี)
// แม่พิมพ์โลหะ (ทวิภาคี)
// เครื่องมือกล (ม.6)
// แม่พิมพ์โลหะ (ม.6)
// เทคโนโลยีงานเชื่อมฯ
// เทคโนโลยีงานเชื่อมฯ (ม.6)
// ไฟฟ้ากำลัง
// ไฟฟ้ากำลัง (ทวิภาคี)
// ไฟฟ้ากำลัง (ม.6)
// อิเล็กทรอนิกส์
// อิเล็กทรอนิกส์ (ทวิภาคี)
// อิเล็กทรอนิกส์ (ม.6)
// ก่อสร้าง
// ก่อสร้าง (ม.6)
// สถาปัตยกรรม
// สถาปัตยกรรม (ม.6)
// โยธา
// โยธา (ม.6)
// เมคคาทรอนิกส์และหุ่นยนต์
// เมคคาทรอนิกส์และหุ่นยนต์ (ม.6)
// เทคโนโลยีคอมพิวเตอร์
// เทคโนโลยีคอมพิวเตอร์ (ม.6)
// การจัดการโลจิสติกส์ฯ (ทวิภาคี)
// เทคโนโลยีสารสนเทศ
// เทคโนโลยีสารสนเทศ (ม.6)
//
// ปวช.
// ช่างยนต์
// ช่างกลโรงงาน
// ช่างเชื่อมโลหะ
// ช่างไฟฟ้ากำลัง
// ช่างอิเล็กทรอนิกส์
// ก่อสร้าง
// สถาปัตยกรรม
// โยธา
// เมคคาทรอนิกส์
// เทคนิคคอมพิวเตอร์
// โลจิสติกส์
// เทคโนโลยีสารสนเทศ
model Department {
  id           String    @id @default(cuid())
  departmentId String?   @unique
  name         String?
  description  String?
  student      Student[]
  course       Course[]
  levelId      String?
  level        Level?    @relation(fields: [levelId], references: [id])
  status       String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  updatedBy    String?
  createdBy    String?

  @@map("department")
}

// รายวิชา
model Course {
  id             String      @id @default(cuid())
  courseId       String?     @unique
  courseName     String?
  numberOfCredit Int? // จำนวนหน่วยกิต
  type           String? // รายวิชาพื้นฐาน, รายวิชาเพิ่มเติม, กิจกรรมพัฒนาผู้เรียน
  evaluation     String? // ประเมินผลรายภาคเรียน, ประเมินผลรายปี
  status         String?
  departmentId   String?
  department     Department? @relation(fields: [departmentId], references: [id])
  classrommId    String?
  classromm      ClassRoom?  @relation(fields: [classrommId], references: [id])
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  updatedBy      String?
  createdBy      String?

  @@map("course")
}

// ระดับชั้น
// ประกาศนียบัตรวิชาชีพ (ปวช.)
// ประกาศนียบัตรวิชาชีพชั้นสูง (ปวส.)
model Level {
  id            String       @id @default(cuid())
  levelId       String?      @unique
  levelName     String?
  levelFullName String?
  department    Department[]
  classRoom     ClassRoom[]
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  updatedBy     String?
  createdBy     String?
  Student       Student[]

  @@map("level")
}

enum Role {
  Admin
  User
  Student
  Teacher
  Parent
}
